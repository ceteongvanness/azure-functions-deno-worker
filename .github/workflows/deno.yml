name: Run end-to-end tests

on: 
  workflow_dispatch:
    inputs:
      denoVersion:
        description: 'Deno Version'     
        required: true
        default: '1.3.2'
      denoWorkerVersion:
        description: 'Deno Worker Version'
        required: true
        default: 'preview'

jobs:
  e2e:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
        - os: windows-latest
          winFuncAppName: deno-worker-tests-win-win
          linuxFuncAppName: deno-worker-tests-win-linux
        - os: ubuntu-latest
          winFuncAppName: deno-worker-tests-linux-win
          linuxFuncAppName: deno-worker-tests-linux-linux
        - os: macos-latest
          winFuncAppName: deno-worker-tests-mac-win
          linuxFuncAppName: deno-worker-tests-mac-linux

    name: ${{ matrix.os }} end-to-end
    runs-on: ${{ matrix.os }}

    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Login to Azure
      uses: azure/login@v1.1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}

    - uses: denolib/setup-deno@v2
      with:
        deno-version: ${{ github.event.inputs.denoVersion }}
    
    - run: |        
        if [ $MATRIX_OS == "windows-latest" ]; then
          choco install azure-functions-core-tools-3 --params "'/x64'"
        elif [ $MATRIX_OS == "macos-latest" ]; then
          brew tap azure/functions
          brew install azure-functions-core-tools@3
        else
          wget -q https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install azure-functions-core-tools-3
        fi
      name: Install Azure Functions Core Tools
      shell: bash
      env:
        MATRIX_OS: ${{ matrix.os }}
    - run: |
        if [ $MATRIX_OS == "windows-latest" ]; then
          export DENOFUNC_COMMAND=denofunc.cmd
        else
          export DENOFUNC_COMMAND=denofunc
        fi
        export PATH=$HOME/.deno/bin:$PATH
        deno install --allow-run --allow-read --allow-write --allow-net --unstable --force --name=denofunc https://raw.githubusercontent.com/anthonychu/azure-functions-deno-worker/${{ github.event.inputs.denoWorkerVersion }}/denofunc.ts
        mkdir myapp && cd myapp
        $DENOFUNC_COMMAND init
        $DENOFUNC_COMMAND start &
        cd ..
        sleep 60
        deno test -A
      name: Test denofunc init and start
      shell: bash
      env:
        MATRIX_OS: ${{ matrix.os }}
    - run: |
        if [ $MATRIX_OS == "windows-latest" ]; then
          export DENOFUNC_COMMAND=denofunc.cmd
        else
          export DENOFUNC_COMMAND=denofunc
        fi
        export PATH=$HOME/.deno/bin:$PATH
        cd myapp
        
        $DENOFUNC_COMMAND publish $MATRIX_LINUX_FUNC_APP_NAME
        $DENOFUNC_COMMAND publish $MATRIX_WIN_FUNC_APP_NAME
        cd ..
        export FUNCTION_APP_BASE_URL=https://$MATRIX_LINUX_FUNC_APP_NAME.azurewebsites.net
        deno test -A
        export FUNCTION_APP_BASE_URL=https://$MATRIX_WIN_FUNC_APP_NAME.azurewebsites.net
        deno test -A
      name: Test denofunc publish
      shell: bash
      env:
        MATRIX_OS: ${{ matrix.os }}
        MATRIX_WIN_FUNC_APP_NAME: ${{ matrix.winFuncAppName }}
        MATRIX_LINUX_FUNC_APP_NAME: ${{ matrix.linuxFuncAppName }}
